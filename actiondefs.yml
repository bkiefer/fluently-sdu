atomic:
  - [ AlwaysTrue, 'True', 'Always true' ]
  - [ BatteryFastened, app.pack_state.fastened, "Pack fastened" ]
  - [ BatteryLocationSet, 'area(app.pack_bb_drawer.bbs_position[0]) > 1', "Pack bounding box has been set" ]
  - [ BatteryLocationConfirmed, app.pack_state.location_confirmed, "Pack bounding box confirmed" ]
  - [ CoverOn, app.pack_state.cover_on == True or app.pack_state.cover_on == None, "The cover may still be on" ]
  - [ CoverOff, app.pack_state.cover_on == False, "The cover is off" ]
  - [ CellModelSet, app.pack_state.cell_model != None, "Cell model identified" ]
  - [ CellsConfirmed, app.pack_state.cells_confirmed, "Cell bounding box confirmed" ]
  - [ CellsLocated, len(app.pack_state.cells) > 0, "Cells have been located" ]
  - [ CellQualitiesSet, app.pack_state.quals == 'set', "Quality of cells set" ]
  - [ CellQualitiesConfirmed, app.pack_state.quals == 'confirmed', "Quality of cells confirmed" ]

  - [ RobotAtToolPose, 'True', 'robot arm is at tool pose' ] # TO CHECK
  - [ RobotAtHomePose, 'True', 'robot arm is at home pose' ] # TO CHECK


actions:
  - confirm_pack_fastened: # H
      pre: ! BatteryFastened
      post: BatteryFastened
  - choose_diff_pack_model: # H
      pre: BatteryLocationSet
      post: BatteryLocationConfirmed
  - add_pack_bb: #H
      pre: ! BatteryLocationConfirmed
      post: BatteryLocationConfirmed # where to read that off?
  - classify_pack:
      pre: BatteryFastened & ! BatteryLocationConfirmed
      post: BatteryLocationConfirmed # NO: pack classified? where to read that off?
  - confirm_pack: #H
      pre: AlwaysTrue # BatteryLocationSet # NO PREREQUISITES
      post: BatteryLocationConfirmed
  - locate_pack: #R
      pre: BatteryFastened & ! BatteryLocationConfirmed
      #post: BatteryLocationSet # WHERE CAN I READ THAT OFF?
  - check_cover_off: #R
      pre: ! CoverOff
      post: CoverOff & BatteryLocationConfirmed # where can i read that off?
  - remove_pack_cover: #R
      pre: ! CoverOff & BatteryLocationConfirmed
  - move_robot_change_tool_pose:
      pre: ! RobotAtToolPose
      post: RobotAtToolPose
  - swap_tool: #H: I'd like to have two: EquipSmall & EquipLarge ...
      pre: AlwaysTrue
  - move_robot_home:
      pre: ! RobotAtHomePose
      post: RobotAtHomePose
  - choose_diff_cell_model:
      pre: AlwaysTrue # ??
  - add_cell_bb: #H: Might have an area check, as with pack?? problematic??
      pre: AlwaysTrue
  - classify_cells:
      pre: CoverOff # & CellsLocated
      post: CellModelSet
  - locate_cells:
      pre: CoverOff # CellModelSet?
      post: CellsLocated # ?? how to check that?
  - confirm_cells:
      pre: CellsLocated
      post: CellsConfirmed
  - assess_cells_qualities:
      pre: CellsConfirmed
      cond: CellQualitiesSet
  - confirm_quals:
      pre: CellQualitiesSet
      post: CellQualitiesConfirmed
  - pickup_cells:
      pre: CellQualitiesConfirmed # & RobotAtHome
  - verify_cell_pickup: # Not found
      pre: AlwaysTrue
