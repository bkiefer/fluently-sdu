atomic:
  - [ AlwaysTrue, 'True', 'Always true' ]
  - [ BatteryFastened, app.pack_state.fastened, "the pack is {neg}confirmed to be fastened" ]
  - [ BatteryModelSet, "app.pack_state.model != None and app.pack_state.model != 'unknown'", "the pack model has {neg}been classified" ]
  - [ BatteryModelConfirmed, "app.pack_state.model_confirmed", "the pack model has {neg}been confirmed" ]
  - [ BatteryLocationSet, 'app.pack_state.frame_location != None', "the pack has {neg}been located" ]
  - [ BatteryLocationConfirmed, app.pack_state.location_confirmed, "the pack location has {neg}been confirmed" ]
  - [ CoverOn, app.pack_state.cover_on == True or app.pack_state.cover_on == None, "the cover may still be on" ]
  - [ CoverOff, app.pack_state.cover_on == False, "the cover is {neg}off" ]
  - [ CoverRobotRemovable, app.pack_state.model == 'square', "the cover is {neg}removable by the robot" ]
  - [ CellModelSet, "app.pack_state.cell_model != None and app.pack_state.cell_model != 'unknown'", "the cell model has {neg}been classified" ]
  - [ CellsConfirmed, app.pack_state.cells_confirmed, "the cell model and locations have {neg}been confirmed" ]
  - [ CellsLocated, len(app.pack_state.cells) > 0 or app.pack_state.manual_cell_bb_added == True, "the cells have {neg}been located" ]
  - [ CellQualitiesSet, app.pack_state.quals == 'set', "the qualities of cells have {neg}been assessed" ]
  - [ CellQualitiesConfirmed, app.pack_state.quals == 'confirmed', "the qualities of the cells have {neg}been confirmed" ]
  - [ SmallToolEquipped, app.robot_module.active_gripper == 'small', "the small tool is {neg}equipped" ]
  - [ LargeToolEquipped, app.robot_module.active_gripper == 'big', "the large tool is {neg}equipped" ]
  - [ ToolEquipped, app.robot_module.active_gripper != 'unknown', "a tool is {neg}equipped" ]
  - [ PickPlaceAttempted, app.pack_state.pickplace_attempted, "the robot has {neg}attempted to pick up the cells" ]
  - [ RobotAtToolPose, app.robot_module.position == 'change_tool', 'the robot is at the tool change position' ] 
  - [ RobotAtHomePose, app.robot_module.position == 'home', 'the robot is at the home pose position' ] 

actions:
  - confirm_pack_fastened: # H
      pre: '! BatteryFastened'
      post: BatteryFastened
  - classify_pack: # R
      pre: 'BatteryFastened' #& ! BatteryModelConfirmed'
      #post: BatteryModelSet # No, might still be unknown if not identified
  - choose_diff_pack_model: # H
      pre: 'BatteryFastened' #& ! BatteryModelConfirmed'
      #post: BatteryModelConfirmed
  - locate_pack: #R
      pre: 'BatteryFastened' #& ! BatteryLocationConfirmed'
      post: BatteryLocationSet
  - add_pack_bb: #H
      pre: 'BatteryFastened & CoverOn' #& ! BatteryLocationConfirmed'
      post: BatteryLocationSet
  - confirm_pack: #H
      pre: 'BatteryModelSet & BatteryLocationSet & ! BatteryLocationConfirmed & ! BatteryModelConfirmed' # BK: or BatteryModelConfirmed?
      post: 'BatteryLocationConfirmed & BatteryModelConfirmed'
  - check_cover_off: #R
      pre: BatteryFastened # ! CoverOff
      #post: 'CoverOff & BatteryLocationConfirmed'
  - remove_pack_cover: #R
      pre: '! CoverOff & BatteryLocationConfirmed & CoverRobotRemovable & ToolEquipped' #& LargeToolEquipped'
  - move_robot_change_tool_pose:
      pre: '! RobotAtToolPose'
      post: RobotAtToolPose
  - equip_small_tool: #H:
      pre: '! SmallToolEquipped'
      post: SmallToolEquipped
  - equip_large_tool: #H:
      pre: '! LargeToolEquipped'
      post: LargeToolEquipped
  - move_robot_home:
      pre: '! RobotAtHomePose'
      post: RobotAtHomePose
  - choose_diff_cell_model:
      pre: 'CoverOff' #& ! CellsConfirmed'
  - add_cell_bb: #H: Might have an area check, as with pack?? problematic??
      pre: CoverOff #& ! CellsConfirmed'
      post: CellsLocated
  - classify_cells:
      pre: 'BatteryFastened' #AlwaysTrue #'CoverOff & ! CellsConfirmed'
      post: CellModelSet
  - locate_cells:
      pre: BatteryFastened #AlwaysTrue #'CoverOff & ! CellsConfirmed'
      post: CellsLocated # ?? how to check that?
  - confirm_cells:
      pre: 'CellsLocated & CellModelSet & ! CellsConfirmed'
      post: CellsConfirmed
  - assess_cells_qualities:
      pre: CellsConfirmed
      cond: CellQualitiesSet
  - confirm_quals:
      pre: CellQualitiesSet
      post: CellQualitiesConfirmed
  - pickup_cells:
      pre: CellQualitiesConfirmed & SmallToolEquipped # & RobotAtHome
  - confirm_cells_picked:
      pre: PickPlaceAttempted
